/****************************************************************************
** Meta object code from reading C++ file 'tst_testcandriverclass.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.2.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_testcandriverclass.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.2.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_driverClass_t {
    const uint offsetsAndSize[2];
    char stringdata0[12];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(offsetof(qt_meta_stringdata_driverClass_t, stringdata0) + ofs), len 
static const qt_meta_stringdata_driverClass_t qt_meta_stringdata_driverClass = {
    {
QT_MOC_LITERAL(0, 11) // "driverClass"

    },
    "driverClass"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_driverClass[] = {

 // content:
      10,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void driverClass::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    (void)_o;
    (void)_id;
    (void)_c;
    (void)_a;
}

const QMetaObject driverClass::staticMetaObject = { {
    QMetaObject::SuperData::link<canDriverInterface::staticMetaObject>(),
    qt_meta_stringdata_driverClass.offsetsAndSize,
    qt_meta_data_driverClass,
    qt_static_metacall,
    nullptr,
qt_incomplete_metaTypeArray<qt_meta_stringdata_driverClass_t
, QtPrivate::TypeAndForceComplete<driverClass, std::true_type>



>,
    nullptr
} };


const QMetaObject *driverClass::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *driverClass::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_driverClass.stringdata0))
        return static_cast<void*>(this);
    return canDriverInterface::qt_metacast(_clname);
}

int driverClass::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = canDriverInterface::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_usingDriver_t {
    const uint offsetsAndSize[20];
    char stringdata0[102];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(offsetof(qt_meta_stringdata_usingDriver_t, stringdata0) + ofs), len 
static const qt_meta_stringdata_usingDriver_t qt_meta_stringdata_usingDriver = {
    {
QT_MOC_LITERAL(0, 11), // "usingDriver"
QT_MOC_LITERAL(12, 10), // "txToDriver"
QT_MOC_LITERAL(23, 0), // ""
QT_MOC_LITERAL(24, 32), // "canDriverInterface::canDataFrame"
QT_MOC_LITERAL(57, 5), // "frame"
QT_MOC_LITERAL(63, 7), // "odIndex"
QT_MOC_LITERAL(71, 3), // "tmo"
QT_MOC_LITERAL(75, 6), // "device"
QT_MOC_LITERAL(82, 6), // "rxDone"
QT_MOC_LITERAL(89, 12) // "deviceRxSlot"

    },
    "usingDriver\0txToDriver\0\0"
    "canDriverInterface::canDataFrame\0frame\0"
    "odIndex\0tmo\0device\0rxDone\0deviceRxSlot"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_usingDriver[] = {

 // content:
      10,       // revision
       0,       // classname
       0,    0, // classinfo
       3,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: name, argc, parameters, tag, flags, initial metatype offsets
       1,    4,   32,    2, 0x06,    1 /* Public */,
       8,    0,   41,    2, 0x06,    6 /* Public */,

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       9,    2,   42,    2, 0x0a,    7 /* Public */,

 // signals: parameters
    QMetaType::Void, 0x80000000 | 3, QMetaType::Int, QMetaType::UInt, QMetaType::QObjectStar,    4,    5,    6,    7,
    QMetaType::Void,

 // slots: parameters
    QMetaType::Void, 0x80000000 | 3, QMetaType::Int,    4,    5,

       0        // eod
};

void usingDriver::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<usingDriver *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->txToDriver((*reinterpret_cast< canDriverInterface::canDataFrame(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])),(*reinterpret_cast< uint(*)>(_a[3])),(*reinterpret_cast< QObject*(*)>(_a[4]))); break;
        case 1: _t->rxDone(); break;
        case 2: _t->deviceRxSlot((*reinterpret_cast< canDriverInterface::canDataFrame(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (usingDriver::*)(canDriverInterface::canDataFrame , int , uint , QObject * );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&usingDriver::txToDriver)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (usingDriver::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&usingDriver::rxDone)) {
                *result = 1;
                return;
            }
        }
    }
}

const QMetaObject usingDriver::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_usingDriver.offsetsAndSize,
    qt_meta_data_usingDriver,
    qt_static_metacall,
    nullptr,
qt_incomplete_metaTypeArray<qt_meta_stringdata_usingDriver_t
, QtPrivate::TypeAndForceComplete<usingDriver, std::true_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<canDriverInterface::canDataFrame, std::false_type>, QtPrivate::TypeAndForceComplete<int, std::false_type>, QtPrivate::TypeAndForceComplete<uint, std::false_type>, QtPrivate::TypeAndForceComplete<QObject *, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>
, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<canDriverInterface::canDataFrame, std::false_type>, QtPrivate::TypeAndForceComplete<int, std::false_type>


>,
    nullptr
} };


const QMetaObject *usingDriver::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *usingDriver::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_usingDriver.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int usingDriver::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 3)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 3)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 3;
    }
    return _id;
}

// SIGNAL 0
void usingDriver::txToDriver(canDriverInterface::canDataFrame _t1, int _t2, uint _t3, QObject * _t4)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t3))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t4))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void usingDriver::rxDone()
{
    QMetaObject::activate(this, &staticMetaObject, 1, nullptr);
}
struct qt_meta_stringdata_test_canDriverInterface_t {
    const uint offsetsAndSize[24];
    char stringdata0[262];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(offsetof(qt_meta_stringdata_test_canDriverInterface_t, stringdata0) + ofs), len 
static const qt_meta_stringdata_test_canDriverInterface_t qt_meta_stringdata_test_canDriverInterface = {
    {
QT_MOC_LITERAL(0, 23), // "test_canDriverInterface"
QT_MOC_LITERAL(24, 12), // "initTestCase"
QT_MOC_LITERAL(37, 0), // ""
QT_MOC_LITERAL(38, 15), // "cleanupTestCase"
QT_MOC_LITERAL(54, 25), // "test_canDriverInterface_1"
QT_MOC_LITERAL(80, 25), // "test_canDriverInterface_2"
QT_MOC_LITERAL(106, 25), // "test_canDriverInterface_3"
QT_MOC_LITERAL(132, 25), // "test_canDriverInterface_4"
QT_MOC_LITERAL(158, 25), // "test_canDriverInterface_5"
QT_MOC_LITERAL(184, 25), // "test_canDriverInterface_6"
QT_MOC_LITERAL(210, 25), // "test_canDriverInterface_7"
QT_MOC_LITERAL(236, 25) // "test_canDriverInterface_8"

    },
    "test_canDriverInterface\0initTestCase\0"
    "\0cleanupTestCase\0test_canDriverInterface_1\0"
    "test_canDriverInterface_2\0"
    "test_canDriverInterface_3\0"
    "test_canDriverInterface_4\0"
    "test_canDriverInterface_5\0"
    "test_canDriverInterface_6\0"
    "test_canDriverInterface_7\0"
    "test_canDriverInterface_8"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_test_canDriverInterface[] = {

 // content:
      10,       // revision
       0,       // classname
       0,    0, // classinfo
      10,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   74,    2, 0x08,    1 /* Private */,
       3,    0,   75,    2, 0x08,    2 /* Private */,
       4,    0,   76,    2, 0x08,    3 /* Private */,
       5,    0,   77,    2, 0x08,    4 /* Private */,
       6,    0,   78,    2, 0x08,    5 /* Private */,
       7,    0,   79,    2, 0x08,    6 /* Private */,
       8,    0,   80,    2, 0x08,    7 /* Private */,
       9,    0,   81,    2, 0x08,    8 /* Private */,
      10,    0,   82,    2, 0x08,    9 /* Private */,
      11,    0,   83,    2, 0x08,   10 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void test_canDriverInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<test_canDriverInterface *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->test_canDriverInterface_1(); break;
        case 3: _t->test_canDriverInterface_2(); break;
        case 4: _t->test_canDriverInterface_3(); break;
        case 5: _t->test_canDriverInterface_4(); break;
        case 6: _t->test_canDriverInterface_5(); break;
        case 7: _t->test_canDriverInterface_6(); break;
        case 8: _t->test_canDriverInterface_7(); break;
        case 9: _t->test_canDriverInterface_8(); break;
        default: ;
        }
    }
    (void)_a;
}

const QMetaObject test_canDriverInterface::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_test_canDriverInterface.offsetsAndSize,
    qt_meta_data_test_canDriverInterface,
    qt_static_metacall,
    nullptr,
qt_incomplete_metaTypeArray<qt_meta_stringdata_test_canDriverInterface_t
, QtPrivate::TypeAndForceComplete<test_canDriverInterface, std::true_type>
, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>, QtPrivate::TypeAndForceComplete<void, std::false_type>


>,
    nullptr
} };


const QMetaObject *test_canDriverInterface::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *test_canDriverInterface::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_test_canDriverInterface.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int test_canDriverInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 10)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 10;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 10)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 10;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
